{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/TextField4.js\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Stack } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport './css/style.css';\nimport UseFetch from './Fetch/useFetchCurrencies';\nimport UseFetchExchanges from './Fetch/useFetchExchanges';\n\n// Calculating Exchanges\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction exchangeCurrency(amount, fromCurrency, toCurrency, exchangeRates) {\n  // Kiểm tra xem đơn vị tiền tệ được chuyển đổi có tỷ giá trong đối tượng exchangeRates hay không\n  if (!exchangeRates.hasOwnProperty(fromCurrency) || !exchangeRates.hasOwnProperty(toCurrency)) {\n    throw new Error('Invalid currency');\n  }\n\n  // Chuyển đổi từ đơn vị gốc thành USD\n  const usdAmount = amount / exchangeRates[fromCurrency];\n\n  // Chuyển đổi từ USD thành đơn vị đích\n  const convertedAmount = usdAmount * exchangeRates[toCurrency];\n  return convertedAmount;\n}\nexport default function TextField4(_ref) {\n  let {\n    firstCur,\n    secondCur,\n    currentMoney\n  } = _ref;\n  // Fetching API\n  const moneyAmount = parseInt(UseFetchExchanges());\n\n  // RemoveDots\n  function removeDotsAndConvertToNumber(str) {\n    const regex = /\\./g;\n    const numberString = str.replace(regex, '');\n    const number = Number(numberString);\n    return number;\n  }\n\n  //Format number with dots\n  function formatNumberWithDots(number) {\n    const str = number.toString();\n    const regex = /\\B(?=(\\d{3})+(?!\\d))/g;\n    return str.replace(regex, '.');\n  }\n  const Total = () => {\n    const cur01 = firstCur;\n    console.log('cur01: ' + cur01);\n    const cur02 = secondCur;\n    console.log('cur02: ' + cur02);\n    // Fetch Exchange data \n    console.log('money amount: ' + moneyAmount);\n    // Exchanging\n    console.log('Calculating - rendering TextField4');\n    const money = parseInt(removeDotsAndConvertToNumber(currentMoney));\n    return formatNumberWithDots(money * moneyAmount);\n  };\n  const total = Total();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"textField34\",\n      label: \"\",\n      variant: \"filled\",\n      color: \"primary\",\n      value: total,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_c = TextField4;\nvar _c;\n$RefreshReg$(_c, \"TextField4\");","map":{"version":3,"names":["React","Box","TextField","Stack","Button","UseFetch","UseFetchExchanges","jsxDEV","_jsxDEV","exchangeCurrency","amount","fromCurrency","toCurrency","exchangeRates","hasOwnProperty","Error","usdAmount","convertedAmount","TextField4","_ref","firstCur","secondCur","currentMoney","moneyAmount","parseInt","removeDotsAndConvertToNumber","str","regex","numberString","replace","number","Number","formatNumberWithDots","toString","Total","cur01","console","log","cur02","money","total","children","id","label","variant","color","value","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/TextField4.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Stack } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport './css/style.css'\nimport UseFetch from './Fetch/useFetchCurrencies';\nimport UseFetchExchanges from './Fetch/useFetchExchanges';\n\n// Calculating Exchanges\nfunction exchangeCurrency(amount, fromCurrency, toCurrency, exchangeRates) {\n\n    // Kiểm tra xem đơn vị tiền tệ được chuyển đổi có tỷ giá trong đối tượng exchangeRates hay không\n    if (!exchangeRates.hasOwnProperty(fromCurrency) || !exchangeRates.hasOwnProperty(toCurrency)) {\n        throw new Error('Invalid currency');\n    }\n\n    // Chuyển đổi từ đơn vị gốc thành USD\n    const usdAmount = amount / exchangeRates[fromCurrency];\n\n    // Chuyển đổi từ USD thành đơn vị đích\n    const convertedAmount = usdAmount * exchangeRates[toCurrency];\n\n    return convertedAmount;\n}\n\n\nexport default function TextField4({ firstCur, secondCur, currentMoney }) {\n\n    // Fetching API\n    const moneyAmount = parseInt(UseFetchExchanges());\n\n    // RemoveDots\n    function removeDotsAndConvertToNumber(str) {\n        const regex = /\\./g;\n        const numberString = str.replace(regex, '');\n        const number = Number(numberString);\n        return number;\n    }\n\n    //Format number with dots\n    function formatNumberWithDots(number) {\n        const str = number.toString();\n        const regex = /\\B(?=(\\d{3})+(?!\\d))/g;\n        return str.replace(regex, '.');\n    }\n\n\n\n    const Total = () => {\n        const cur01 = firstCur;\n        console.log('cur01: ' + cur01);\n        const cur02 = secondCur;\n        console.log('cur02: ' + cur02);\n        // Fetch Exchange data \n        console.log('money amount: ' + moneyAmount);\n        // Exchanging\n        console.log('Calculating - rendering TextField4');\n        const money = parseInt(removeDotsAndConvertToNumber(currentMoney));\n        return formatNumberWithDots(money * moneyAmount);\n    }\n\n    const total = Total();\n\n\n    return (\n        <div>\n            <TextField id=\"textField34\" label=\"\" variant=\"filled\" color='primary' value={total} fullWidth />\n        </div>\n    )\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,KAAK,QAAQ,eAAe;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,iBAAiB;AACxB,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,YAAY,EAAEC,UAAU,EAAEC,aAAa,EAAE;EAEvE;EACA,IAAI,CAACA,aAAa,CAACC,cAAc,CAACH,YAAY,CAAC,IAAI,CAACE,aAAa,CAACC,cAAc,CAACF,UAAU,CAAC,EAAE;IAC1F,MAAM,IAAIG,KAAK,CAAC,kBAAkB,CAAC;EACvC;;EAEA;EACA,MAAMC,SAAS,GAAGN,MAAM,GAAGG,aAAa,CAACF,YAAY,CAAC;;EAEtD;EACA,MAAMM,eAAe,GAAGD,SAAS,GAAGH,aAAa,CAACD,UAAU,CAAC;EAE7D,OAAOK,eAAe;AAC1B;AAGA,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAwC;EAAA,IAAvC;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAEpE;EACA,MAAMI,WAAW,GAAGC,QAAQ,CAAClB,iBAAiB,CAAC,CAAC,CAAC;;EAEjD;EACA,SAASmB,4BAA4BA,CAACC,GAAG,EAAE;IACvC,MAAMC,KAAK,GAAG,KAAK;IACnB,MAAMC,YAAY,GAAGF,GAAG,CAACG,OAAO,CAACF,KAAK,EAAE,EAAE,CAAC;IAC3C,MAAMG,MAAM,GAAGC,MAAM,CAACH,YAAY,CAAC;IACnC,OAAOE,MAAM;EACjB;;EAEA;EACA,SAASE,oBAAoBA,CAACF,MAAM,EAAE;IAClC,MAAMJ,GAAG,GAAGI,MAAM,CAACG,QAAQ,CAAC,CAAC;IAC7B,MAAMN,KAAK,GAAG,uBAAuB;IACrC,OAAOD,GAAG,CAACG,OAAO,CAACF,KAAK,EAAE,GAAG,CAAC;EAClC;EAIA,MAAMO,KAAK,GAAGA,CAAA,KAAM;IAChB,MAAMC,KAAK,GAAGf,QAAQ;IACtBgB,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGF,KAAK,CAAC;IAC9B,MAAMG,KAAK,GAAGjB,SAAS;IACvBe,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,KAAK,CAAC;IAC9B;IACAF,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGd,WAAW,CAAC;IAC3C;IACAa,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACjD,MAAME,KAAK,GAAGf,QAAQ,CAACC,4BAA4B,CAACH,YAAY,CAAC,CAAC;IAClE,OAAOU,oBAAoB,CAACO,KAAK,GAAGhB,WAAW,CAAC;EACpD,CAAC;EAED,MAAMiB,KAAK,GAAGN,KAAK,CAAC,CAAC;EAGrB,oBACI1B,OAAA;IAAAiC,QAAA,eACIjC,OAAA,CAACN,SAAS;MAACwC,EAAE,EAAC,aAAa;MAACC,KAAK,EAAC,EAAE;MAACC,OAAO,EAAC,QAAQ;MAACC,KAAK,EAAC,SAAS;MAACC,KAAK,EAAEN,KAAM;MAACO,SAAS;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/F,CAAC;AAEd;AAACC,EAAA,GA3CuBlC,UAAU;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}