{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/TextField3.js\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport './css/style.css';\nimport { Stack } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport UseFetchCurrencies from './Fetch/useFetchCurrencies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextField3(props) {\n  // Lay API currencies\n  const [data] = UseFetchCurrencies();\n  // Currency selected\n  const ChosenCur = props.chosenCur;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"textField34\",\n      label: \"\",\n      variant: \"filled\",\n      color: \"primary\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      alignItems: \"center\",\n      className: \"CurrencyRow\",\n      children: data && data.map((currency, index) => {\n        if (currency == chosenCur) {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            className: \"chosenButton\",\n            children: currency\n          }, 'cur1' + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            className: \"chosenButton\",\n            children: currency\n          }, 'cur1' + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = TextField3;\nvar _c;\n$RefreshReg$(_c, \"TextField3\");","map":{"version":3,"names":["React","Box","TextField","Stack","Button","UseFetchCurrencies","jsxDEV","_jsxDEV","TextField3","props","data","ChosenCur","chosenCur","children","id","label","variant","color","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","direction","alignItems","className","map","currency","index","_c","$RefreshReg$"],"sources":["/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/TextField3.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport './css/style.css'\nimport { Stack } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport UseFetchCurrencies from './Fetch/useFetchCurrencies';\n\n\n\nexport default function TextField3(props) {\n\n    // Lay API currencies\n    const [data] = UseFetchCurrencies();\n    // Currency selected\n    const ChosenCur = props.chosenCur;\n\n    return (\n        <div>\n            <TextField id=\"textField34\" label=\"\" variant=\"filled\" color='primary' fullWidth />\n            <Stack direction='row' alignItems=\"center\"\n                className='CurrencyRow' >\n                {data && data.map(\n                    (currency, index) => {\n                        if (currency == chosenCur) {\n                            return (\n                                <Button variant=\"text\" className='chosenButton' key={'cur1' + index}>{currency}</Button>\n                            )\n                        }\n                        else {\n                            return (\n                                <Button variant=\"text\" className='chosenButton' key={'cur1' + index}>{currency}</Button>\n                            )\n                        }\n\n                    }\n                )}\n            </Stack>\n        </div>\n    )\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAO,iBAAiB;AACxB,SAASC,KAAK,QAAQ,eAAe;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,kBAAkB,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI5D,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EAEtC;EACA,MAAM,CAACC,IAAI,CAAC,GAAGL,kBAAkB,CAAC,CAAC;EACnC;EACA,MAAMM,SAAS,GAAGF,KAAK,CAACG,SAAS;EAEjC,oBACIL,OAAA;IAAAM,QAAA,gBACIN,OAAA,CAACL,SAAS;MAACY,EAAE,EAAC,aAAa;MAACC,KAAK,EAAC,EAAE;MAACC,OAAO,EAAC,QAAQ;MAACC,KAAK,EAAC,SAAS;MAACC,SAAS;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClFf,OAAA,CAACJ,KAAK;MAACoB,SAAS,EAAC,KAAK;MAACC,UAAU,EAAC,QAAQ;MACtCC,SAAS,EAAC,aAAa;MAAAZ,QAAA,EACtBH,IAAI,IAAIA,IAAI,CAACgB,GAAG,CACb,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACjB,IAAID,QAAQ,IAAIf,SAAS,EAAE;UACvB,oBACIL,OAAA,CAACH,MAAM;YAACY,OAAO,EAAC,MAAM;YAACS,SAAS,EAAC,cAAc;YAAAZ,QAAA,EAAuBc;UAAQ,GAAzB,MAAM,GAAGC,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAoB,CAAC;QAEhG,CAAC,MACI;UACD,oBACIf,OAAA,CAACH,MAAM;YAACY,OAAO,EAAC,MAAM;YAACS,SAAS,EAAC,cAAc;YAAAZ,QAAA,EAAuBc;UAAQ,GAAzB,MAAM,GAAGC,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAoB,CAAC;QAEhG;MAEJ,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACO,EAAA,GA9BuBrB,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}