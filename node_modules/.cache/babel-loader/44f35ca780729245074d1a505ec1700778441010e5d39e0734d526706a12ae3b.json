{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/TextField4.js\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Stack } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport './css/style.css';\nimport UseFetch from './Fetch/useFetchCurrencies';\nimport UseFetchExchange from './Fetch/useFetchExchange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextField4(props) {\n  // RemoveDots\n  function removeDotsAndConvertToNumber(str) {\n    const regex = /\\./g;\n    const numberString = str.replace(regex, '');\n    const number = Number(numberString);\n    return number;\n  }\n\n  //Format number with dots\n  function formatNumberWithCommas(number) {\n    const str = number.toString();\n    let formatted = '';\n\n    // Xử lý hàng triệu\n    if (str.length > 6) {\n      const millions = str.slice(0, -6);\n      formatted += millions + '.';\n    }\n\n    // Xử lý hàng nghìn\n    if (str.length > 3) {\n      const thousands = str.slice(-6, -3);\n      formatted += thousands + '.';\n    }\n\n    // Xử lý hàng chục và đơn vị\n    const rest = str.slice(-3);\n    formatted += rest;\n    return formatted;\n  }\n  const firstCur = props.firstCur;\n  const secondCur = props.secondCur;\n  const moneyAmount = UseFetchExchange(firstCur, secondCur);\n  console.log('Calculating');\n  const money = removeDotsAndConvertToNumber(props.currentMoney);\n  const total = formatNumberWithCommas(money * moneyAmount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"textField34\",\n      label: \"\",\n      variant: \"filled\",\n      color: \"primary\",\n      value: total,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_c = TextField4;\nvar _c;\n$RefreshReg$(_c, \"TextField4\");","map":{"version":3,"names":["React","Box","TextField","Stack","Button","UseFetch","UseFetchExchange","jsxDEV","_jsxDEV","TextField4","props","removeDotsAndConvertToNumber","str","regex","numberString","replace","number","Number","formatNumberWithCommas","toString","formatted","length","millions","slice","thousands","rest","firstCur","secondCur","moneyAmount","console","log","money","currentMoney","total","children","id","label","variant","color","value","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/TextField4.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Stack } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport './css/style.css'\nimport UseFetch from './Fetch/useFetchCurrencies';\nimport UseFetchExchange from './Fetch/useFetchExchange';\n\nexport default function TextField4(props) {\n\n    // RemoveDots\n    function removeDotsAndConvertToNumber(str) {\n        const regex = /\\./g;\n        const numberString = str.replace(regex, '');\n        const number = Number(numberString);\n        return number;\n    }\n\n    //Format number with dots\n    function formatNumberWithCommas(number) {\n        const str = number.toString();\n        let formatted = '';\n\n        // Xử lý hàng triệu\n        if (str.length > 6) {\n            const millions = str.slice(0, -6);\n            formatted += millions + '.';\n        }\n\n        // Xử lý hàng nghìn\n        if (str.length > 3) {\n            const thousands = str.slice(-6, -3);\n            formatted += thousands + '.';\n        }\n\n        // Xử lý hàng chục và đơn vị\n        const rest = str.slice(-3);\n        formatted += rest;\n\n        return formatted;\n    }\n\n\n    const firstCur = props.firstCur;\n    const secondCur = props.secondCur;\n\n    const moneyAmount = UseFetchExchange(firstCur, secondCur);\n    console.log('Calculating');\n    const money = removeDotsAndConvertToNumber(props.currentMoney)\n    const total = formatNumberWithCommas(money * moneyAmount);\n\n\n    return (\n        <div>\n            <TextField id=\"textField34\" label=\"\" variant=\"filled\" color='primary' value={total} fullWidth />\n        </div>\n    )\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,KAAK,QAAQ,eAAe;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,iBAAiB;AACxB,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,gBAAgB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EAEtC;EACA,SAASC,4BAA4BA,CAACC,GAAG,EAAE;IACvC,MAAMC,KAAK,GAAG,KAAK;IACnB,MAAMC,YAAY,GAAGF,GAAG,CAACG,OAAO,CAACF,KAAK,EAAE,EAAE,CAAC;IAC3C,MAAMG,MAAM,GAAGC,MAAM,CAACH,YAAY,CAAC;IACnC,OAAOE,MAAM;EACjB;;EAEA;EACA,SAASE,sBAAsBA,CAACF,MAAM,EAAE;IACpC,MAAMJ,GAAG,GAAGI,MAAM,CAACG,QAAQ,CAAC,CAAC;IAC7B,IAAIC,SAAS,GAAG,EAAE;;IAElB;IACA,IAAIR,GAAG,CAACS,MAAM,GAAG,CAAC,EAAE;MAChB,MAAMC,QAAQ,GAAGV,GAAG,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACjCH,SAAS,IAAIE,QAAQ,GAAG,GAAG;IAC/B;;IAEA;IACA,IAAIV,GAAG,CAACS,MAAM,GAAG,CAAC,EAAE;MAChB,MAAMG,SAAS,GAAGZ,GAAG,CAACW,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACnCH,SAAS,IAAII,SAAS,GAAG,GAAG;IAChC;;IAEA;IACA,MAAMC,IAAI,GAAGb,GAAG,CAACW,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1BH,SAAS,IAAIK,IAAI;IAEjB,OAAOL,SAAS;EACpB;EAGA,MAAMM,QAAQ,GAAGhB,KAAK,CAACgB,QAAQ;EAC/B,MAAMC,SAAS,GAAGjB,KAAK,CAACiB,SAAS;EAEjC,MAAMC,WAAW,GAAGtB,gBAAgB,CAACoB,QAAQ,EAAEC,SAAS,CAAC;EACzDE,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B,MAAMC,KAAK,GAAGpB,4BAA4B,CAACD,KAAK,CAACsB,YAAY,CAAC;EAC9D,MAAMC,KAAK,GAAGf,sBAAsB,CAACa,KAAK,GAAGH,WAAW,CAAC;EAGzD,oBACIpB,OAAA;IAAA0B,QAAA,eACI1B,OAAA,CAACN,SAAS;MAACiC,EAAE,EAAC,aAAa;MAACC,KAAK,EAAC,EAAE;MAACC,OAAO,EAAC,QAAQ;MAACC,KAAK,EAAC,SAAS;MAACC,KAAK,EAAEN,KAAM;MAACO,SAAS;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/F,CAAC;AAEd;AAACC,EAAA,GAjDuBpC,UAAU;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}