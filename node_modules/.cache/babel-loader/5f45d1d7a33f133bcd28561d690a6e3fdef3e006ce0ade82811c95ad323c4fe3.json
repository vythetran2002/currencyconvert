{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/Components/Heading.js\";\nimport { React, ReactDOM } from \"react\";\nimport '../Styles/style.css';\nimport Button from '@mui/material/Button';\nimport { Typography } from \"@mui/material\";\n\n//Return name of the currencies\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction convertCurrencyAbbreviations(input) {\n  const currencyMappings = {\n    SGD: \"Singapore Dollar\",\n    MYR: \"Malaysian Ringgit\",\n    EUR: \"Euro\",\n    USD: \"US Dollar\",\n    AUD: \"Australian Dollar\",\n    JPY: \"Japanese Yen\",\n    CNH: \"Chinese Yuan\",\n    HKD: \"Hong Kong Dollar\",\n    CAD: \"Canadian Dollar\",\n    INR: \"Indian Rupee\",\n    DKK: \"Danish Krone\",\n    GBP: \"British Pound\",\n    RUB: \"Russian Ruble\",\n    NZD: \"New Zealand Dollar\",\n    MXN: \"Mexican Peso\",\n    IDR: \"Indonesian Rupiah\",\n    TWD: \"Taiwan Dollar\",\n    THB: \"Thai Baht\",\n    VND: \"Vietnamese Dong\"\n  };\n  const abbreviations = Object.keys(currencyMappings);\n  const regex = new RegExp(abbreviations.join(\"|\"), \"gi\");\n  return input.replace(regex, match => currencyMappings[match.toUpperCase()] || match);\n}\nexport default function Heading(_ref) {\n  let {\n    moneyAmount,\n    currency1,\n    currency2\n  } = _ref;\n  const FilteredMoneyAmount1 = convertCurrencyAbbreviations(moneyAmount);\n  const FilteredCurrency1 = convertCurrencyAbbreviations(currency1);\n  const FilteredCurrency2 = convertCurrencyAbbreviations(currency2);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slogan-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"slogan\",\n        children: \"OANDA CURRENCY CONVERTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"content\",\n        children: [FilteredMoneyAmount1, \" \", FilteredCurrency1, \" to \", FilteredCurrency2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Heading;\nvar _c;\n$RefreshReg$(_c, \"Heading\");","map":{"version":3,"names":["React","ReactDOM","Button","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","convertCurrencyAbbreviations","input","currencyMappings","SGD","MYR","EUR","USD","AUD","JPY","CNH","HKD","CAD","INR","DKK","GBP","RUB","NZD","MXN","IDR","TWD","THB","VND","abbreviations","Object","keys","regex","RegExp","join","replace","match","toUpperCase","Heading","_ref","moneyAmount","currency1","currency2","FilteredMoneyAmount1","FilteredCurrency1","FilteredCurrency2","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/Components/Heading.js"],"sourcesContent":["import { React, ReactDOM } from \"react\";\nimport '../Styles/style.css'\nimport Button from '@mui/material/Button';\nimport { Typography } from \"@mui/material\";\n\n//Return name of the currencies\nfunction convertCurrencyAbbreviations(input) {\n    const currencyMappings = {\n        SGD: \"Singapore Dollar\",\n        MYR: \"Malaysian Ringgit\",\n        EUR: \"Euro\",\n        USD: \"US Dollar\",\n        AUD: \"Australian Dollar\",\n        JPY: \"Japanese Yen\",\n        CNH: \"Chinese Yuan\",\n        HKD: \"Hong Kong Dollar\",\n        CAD: \"Canadian Dollar\",\n        INR: \"Indian Rupee\",\n        DKK: \"Danish Krone\",\n        GBP: \"British Pound\",\n        RUB: \"Russian Ruble\",\n        NZD: \"New Zealand Dollar\",\n        MXN: \"Mexican Peso\",\n        IDR: \"Indonesian Rupiah\",\n        TWD: \"Taiwan Dollar\",\n        THB: \"Thai Baht\",\n        VND: \"Vietnamese Dong\"\n    };\n\n    const abbreviations = Object.keys(currencyMappings);\n    const regex = new RegExp(abbreviations.join(\"|\"), \"gi\");\n\n    return input.replace(regex, match => currencyMappings[match.toUpperCase()] || match);\n}\n\nexport default function Heading({ moneyAmount, currency1, currency2 }) {\n\n    const FilteredMoneyAmount1 = convertCurrencyAbbreviations(moneyAmount);\n    const FilteredCurrency1 = convertCurrencyAbbreviations(currency1);\n    const FilteredCurrency2 = convertCurrencyAbbreviations(currency2);\n\n    return (\n        <>\n            <div className=\"slogan-container\">\n                <p className=\"slogan\">OANDA CURRENCY CONVERTER</p>\n            </div>\n            <div>\n                <p className=\"content\">{FilteredMoneyAmount1} {FilteredCurrency1} to {FilteredCurrency2}</p>\n            </div>\n        </>\n    )\n}"],"mappings":";AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAC5B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,UAAU,QAAQ,eAAe;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,4BAA4BA,CAACC,KAAK,EAAE;EACzC,MAAMC,gBAAgB,GAAG;IACrBC,GAAG,EAAE,kBAAkB;IACvBC,GAAG,EAAE,mBAAmB;IACxBC,GAAG,EAAE,MAAM;IACXC,GAAG,EAAE,WAAW;IAChBC,GAAG,EAAE,mBAAmB;IACxBC,GAAG,EAAE,cAAc;IACnBC,GAAG,EAAE,cAAc;IACnBC,GAAG,EAAE,kBAAkB;IACvBC,GAAG,EAAE,iBAAiB;IACtBC,GAAG,EAAE,cAAc;IACnBC,GAAG,EAAE,cAAc;IACnBC,GAAG,EAAE,eAAe;IACpBC,GAAG,EAAE,eAAe;IACpBC,GAAG,EAAE,oBAAoB;IACzBC,GAAG,EAAE,cAAc;IACnBC,GAAG,EAAE,mBAAmB;IACxBC,GAAG,EAAE,eAAe;IACpBC,GAAG,EAAE,WAAW;IAChBC,GAAG,EAAE;EACT,CAAC;EAED,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACtB,gBAAgB,CAAC;EACnD,MAAMuB,KAAK,GAAG,IAAIC,MAAM,CAACJ,aAAa,CAACK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;EAEvD,OAAO1B,KAAK,CAAC2B,OAAO,CAACH,KAAK,EAAEI,KAAK,IAAI3B,gBAAgB,CAAC2B,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC,IAAID,KAAK,CAAC;AACxF;AAEA,eAAe,SAASE,OAAOA,CAAAC,IAAA,EAAwC;EAAA,IAAvC;IAAEC,WAAW;IAAEC,SAAS;IAAEC;EAAU,CAAC,GAAAH,IAAA;EAEjE,MAAMI,oBAAoB,GAAGpC,4BAA4B,CAACiC,WAAW,CAAC;EACtE,MAAMI,iBAAiB,GAAGrC,4BAA4B,CAACkC,SAAS,CAAC;EACjE,MAAMI,iBAAiB,GAAGtC,4BAA4B,CAACmC,SAAS,CAAC;EAEjE,oBACItC,OAAA,CAAAE,SAAA;IAAAwC,QAAA,gBACI1C,OAAA;MAAK2C,SAAS,EAAC,kBAAkB;MAAAD,QAAA,eAC7B1C,OAAA;QAAG2C,SAAS,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAwB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACN/C,OAAA;MAAA0C,QAAA,eACI1C,OAAA;QAAG2C,SAAS,EAAC,SAAS;QAAAD,QAAA,GAAEH,oBAAoB,EAAC,GAAC,EAACC,iBAAiB,EAAC,MAAI,EAACC,iBAAiB;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F,CAAC;EAAA,eACR,CAAC;AAEX;AAACC,EAAA,GAhBuBd,OAAO;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}