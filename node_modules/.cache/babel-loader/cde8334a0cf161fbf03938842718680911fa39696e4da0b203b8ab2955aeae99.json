{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/TextField4.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Stack } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport './css/style.css';\nimport UseFetchExchange2 from './Fetch/useFetchExchange2';\nimport { useEffect } from 'react';\n\n// Calculating Exchanges\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction exchangeCurrency(amount, fromCurrency, toCurrency, exchangeRates) {\n  if (!exchangeRates.hasOwnProperty(fromCurrency) || !exchangeRates.hasOwnProperty(toCurrency)) {\n    throw new Error('Invalid currency');\n  }\n  const usdAmount = amount / exchangeRates[fromCurrency];\n  const convertedAmount = usdAmount * exchangeRates[toCurrency];\n  return convertedAmount;\n}\nexport default function TextField4(_ref) {\n  _s();\n  let {\n    firstCur,\n    secondCur,\n    currentMoney\n  } = _ref;\n  // Fetching API\n  const data = UseFetchExchange2('https://openexchangerates.org/api/latest.json?app_id=01341f5261444649a612793df73c7130');\n  console.log('--------222222--------');\n  console.log(data);\n  useEffect(() => {\n    const exchangedMoney = exchangeCurrency(parseInt(currentMoney), firstCur, secondCur, data.rates);\n    setTotal(exchangedMoney);\n  }, [data, firstCur, secondCur, currentMoney]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"textField34\",\n      label: \"\",\n      variant: \"filled\",\n      color: \"primary\",\n      value: total,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(TextField4, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TextField4;\nvar _c;\n$RefreshReg$(_c, \"TextField4\");","map":{"version":3,"names":["React","Box","TextField","Stack","Button","UseFetchExchange2","useEffect","jsxDEV","_jsxDEV","exchangeCurrency","amount","fromCurrency","toCurrency","exchangeRates","hasOwnProperty","Error","usdAmount","convertedAmount","TextField4","_ref","_s","firstCur","secondCur","currentMoney","data","console","log","exchangedMoney","parseInt","rates","setTotal","children","id","label","variant","color","value","total","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/TextField4.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Stack } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport './css/style.css'\nimport UseFetchExchange2 from './Fetch/useFetchExchange2';\nimport { useEffect } from 'react';\n\n// Calculating Exchanges\nfunction exchangeCurrency(amount, fromCurrency, toCurrency, exchangeRates) {\n    if (!exchangeRates.hasOwnProperty(fromCurrency) || !exchangeRates.hasOwnProperty(toCurrency)) {\n        throw new Error('Invalid currency');\n    }\n\n    const usdAmount = amount / exchangeRates[fromCurrency];\n    const convertedAmount = usdAmount * exchangeRates[toCurrency];\n\n    return convertedAmount;\n}\n\n\n\n\nexport default function TextField4({ firstCur, secondCur, currentMoney }) {\n\n    // Fetching API\n    const data = UseFetchExchange2('https://openexchangerates.org/api/latest.json?app_id=01341f5261444649a612793df73c7130');\n    console.log('--------222222--------');\n    console.log(data);\n\n    useEffect(\n        () => {\n            const exchangedMoney = exchangeCurrency(parseInt(currentMoney), firstCur, secondCur, data.rates);\n            setTotal(exchangedMoney);\n        }, [data, firstCur, secondCur, currentMoney]\n    );\n\n\n\n\n    return (\n        <div>\n            <TextField id=\"textField34\" label=\"\" variant=\"filled\" color='primary' value={total} fullWidth />\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,KAAK,QAAQ,eAAe;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,iBAAiB;AACxB,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,YAAY,EAAEC,UAAU,EAAEC,aAAa,EAAE;EACvE,IAAI,CAACA,aAAa,CAACC,cAAc,CAACH,YAAY,CAAC,IAAI,CAACE,aAAa,CAACC,cAAc,CAACF,UAAU,CAAC,EAAE;IAC1F,MAAM,IAAIG,KAAK,CAAC,kBAAkB,CAAC;EACvC;EAEA,MAAMC,SAAS,GAAGN,MAAM,GAAGG,aAAa,CAACF,YAAY,CAAC;EACtD,MAAMM,eAAe,GAAGD,SAAS,GAAGH,aAAa,CAACD,UAAU,CAAC;EAE7D,OAAOK,eAAe;AAC1B;AAKA,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAwC;EAAAC,EAAA;EAAA,IAAvC;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAAJ,IAAA;EAEpE;EACA,MAAMK,IAAI,GAAGnB,iBAAiB,CAAC,uFAAuF,CAAC;EACvHoB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrCD,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjBlB,SAAS,CACL,MAAM;IACF,MAAMqB,cAAc,GAAGlB,gBAAgB,CAACmB,QAAQ,CAACL,YAAY,CAAC,EAAEF,QAAQ,EAAEC,SAAS,EAAEE,IAAI,CAACK,KAAK,CAAC;IAChGC,QAAQ,CAACH,cAAc,CAAC;EAC5B,CAAC,EAAE,CAACH,IAAI,EAAEH,QAAQ,EAAEC,SAAS,EAAEC,YAAY,CAC/C,CAAC;EAKD,oBACIf,OAAA;IAAAuB,QAAA,eACIvB,OAAA,CAACN,SAAS;MAAC8B,EAAE,EAAC,aAAa;MAACC,KAAK,EAAC,EAAE;MAACC,OAAO,EAAC,QAAQ;MAACC,KAAK,EAAC,SAAS;MAACC,KAAK,EAAEC,KAAM;MAACC,SAAS;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/F,CAAC;AAEd;AAACtB,EAAA,CAtBuBF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}