{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/Fetch/test.js\";\nimport React from \"react\";\nimport { ReactDOM } from \"react\";\nimport UseFetchExchange from \"./useFetchExchange\";\nimport UseFetchCurrencies from \"./useFetchCurrencies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TestFetch() {\n  const data = UseFetchExchange('USD', 'VND');\n  const list = UseFetchCurrencies();\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((currency, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: currency\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = TestFetch;\nvar _c;\n$RefreshReg$(_c, \"TestFetch\");","map":{"version":3,"names":["React","ReactDOM","UseFetchExchange","UseFetchCurrencies","jsxDEV","_jsxDEV","Fragment","_Fragment","TestFetch","data","list","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","currency","index","_c","$RefreshReg$"],"sources":["/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/Fetch/test.js"],"sourcesContent":["import React from \"react\"\nimport { ReactDOM } from \"react\"\nimport UseFetchExchange from \"./useFetchExchange\";\nimport UseFetchCurrencies from \"./useFetchCurrencies\";\n\nexport default function TestFetch() {\n    const data = UseFetchExchange('USD', 'VND');\n    const list = UseFetchCurrencies();\n\n    console.log(data);\n\n    return (\n        <>\n            <h1>{data}</h1>\n            <ul>\n                {list.map(\n                    (currency, index) => {\n                        return (\n                            <li key={index}>{currency}</li>\n                        )\n                    }\n                )}\n            </ul>\n        </>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,eAAe,SAASC,SAASA,CAAA,EAAG;EAChC,MAAMC,IAAI,GAAGP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;EAC3C,MAAMQ,IAAI,GAAGP,kBAAkB,CAAC,CAAC;EAEjCQ,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjB,oBACIJ,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACIR,OAAA;MAAAQ,QAAA,EAAKJ;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfZ,OAAA;MAAAQ,QAAA,EACKH,IAAI,CAACQ,GAAG,CACL,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACjB,oBACIf,OAAA;UAAAQ,QAAA,EAAiBM;QAAQ,GAAhBC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC;MAEvC,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACP,CAAC;AAEX;AAACI,EAAA,GApBuBb,SAAS;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}