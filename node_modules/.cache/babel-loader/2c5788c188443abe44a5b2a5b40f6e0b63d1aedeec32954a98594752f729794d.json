{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"props\"];\nimport * as React from 'react';\nimport { useSlotProps } from '@mui/base/utils';\nimport { useLicenseVerifier } from '@mui/x-license-pro';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { PickersLayout } from '@mui/x-date-pickers/PickersLayout';\nimport { executeInTheNextEventLoopTick, getActiveElement, usePicker, PickersPopper } from '@mui/x-date-pickers/internals';\nimport { useEnrichedRangePickerFieldProps } from '../useEnrichedRangePickerFieldProps';\nimport { getReleaseInfo } from '../../utils/releaseInfo';\nimport { useRangePosition } from '../useRangePosition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\nexport const useDesktopRangePicker = _ref => {\n  var _fieldType, _slots$layout;\n  let {\n      props\n    } = _ref,\n    pickerParams = _objectWithoutPropertiesLoose(_ref, _excluded);\n  useLicenseVerifier('x-date-pickers-pro', releaseInfo);\n  const {\n    slots,\n    slotProps,\n    className,\n    sx,\n    format,\n    formatDensity,\n    label,\n    inputRef,\n    readOnly,\n    disabled,\n    autoFocus,\n    disableOpenPicker,\n    localeText\n  } = props;\n  const fieldContainerRef = React.useRef(null);\n  const popperRef = React.useRef(null);\n  const {\n    rangePosition,\n    onRangePositionChange,\n    singleInputFieldRef\n  } = useRangePosition(props);\n  const {\n    open,\n    actions,\n    layoutProps,\n    renderCurrentView,\n    shouldRestoreFocus,\n    fieldProps: pickerFieldProps\n  } = usePicker(_extends({}, pickerParams, {\n    props,\n    wrapperVariant: 'desktop',\n    autoFocusView: true,\n    additionalViewProps: {\n      rangePosition,\n      onRangePositionChange\n    }\n  }));\n  const handleBlur = () => {\n    executeInTheNextEventLoopTick(() => {\n      var _fieldContainerRef$cu, _popperRef$current;\n      if ((_fieldContainerRef$cu = fieldContainerRef.current) != null && _fieldContainerRef$cu.contains(getActiveElement(document)) || (_popperRef$current = popperRef.current) != null && _popperRef$current.contains(getActiveElement(document))) {\n        return;\n      }\n      actions.onDismiss();\n    });\n  };\n  const Field = slots.field;\n  const fieldType = (_fieldType = Field.fieldType) != null ? _fieldType : 'multi-input';\n  const fieldProps = useSlotProps({\n    elementType: Field,\n    externalSlotProps: slotProps == null ? void 0 : slotProps.field,\n    additionalProps: _extends({}, pickerFieldProps, {\n      readOnly,\n      disabled,\n      className,\n      sx,\n      format,\n      formatDensity,\n      autoFocus: autoFocus && !props.open,\n      ref: fieldContainerRef\n    }, fieldType === 'single-input' && {\n      inputRef\n    }),\n    ownerState: props\n  });\n  const enrichedFieldProps = useEnrichedRangePickerFieldProps({\n    wrapperVariant: 'desktop',\n    fieldType,\n    open,\n    actions,\n    readOnly,\n    disableOpenPicker,\n    label,\n    localeText,\n    onBlur: handleBlur,\n    rangePosition,\n    onRangePositionChange,\n    singleInputFieldRef,\n    pickerSlotProps: slotProps,\n    pickerSlots: slots,\n    fieldProps\n  });\n  const slotPropsForLayout = _extends({}, slotProps, {\n    toolbar: _extends({}, slotProps == null ? void 0 : slotProps.toolbar, {\n      rangePosition,\n      onRangePositionChange\n    })\n  });\n  const Layout = (_slots$layout = slots == null ? void 0 : slots.layout) != null ? _slots$layout : PickersLayout;\n  const renderPicker = () => /*#__PURE__*/_jsxs(LocalizationProvider, {\n    localeText: localeText,\n    children: [/*#__PURE__*/_jsx(Field, _extends({}, enrichedFieldProps)), /*#__PURE__*/_jsx(PickersPopper, _extends({\n      role: \"tooltip\",\n      containerRef: popperRef,\n      anchorEl: fieldContainerRef.current,\n      onBlur: handleBlur\n    }, actions, {\n      open: open,\n      slots: slots,\n      slotProps: slotProps,\n      shouldRestoreFocus: shouldRestoreFocus,\n      children: /*#__PURE__*/_jsx(Layout, _extends({}, layoutProps, slotProps == null ? void 0 : slotProps.layout, {\n        slots: slots,\n        slotProps: slotPropsForLayout,\n        children: renderCurrentView()\n      }))\n    }))]\n  });\n  return {\n    renderPicker\n  };\n};","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useSlotProps","useLicenseVerifier","LocalizationProvider","PickersLayout","executeInTheNextEventLoopTick","getActiveElement","usePicker","PickersPopper","useEnrichedRangePickerFieldProps","getReleaseInfo","useRangePosition","jsx","_jsx","jsxs","_jsxs","releaseInfo","useDesktopRangePicker","_ref","_fieldType","_slots$layout","props","pickerParams","slots","slotProps","className","sx","format","formatDensity","label","inputRef","readOnly","disabled","autoFocus","disableOpenPicker","localeText","fieldContainerRef","useRef","popperRef","rangePosition","onRangePositionChange","singleInputFieldRef","open","actions","layoutProps","renderCurrentView","shouldRestoreFocus","fieldProps","pickerFieldProps","wrapperVariant","autoFocusView","additionalViewProps","handleBlur","_fieldContainerRef$cu","_popperRef$current","current","contains","document","onDismiss","Field","field","fieldType","elementType","externalSlotProps","additionalProps","ref","ownerState","enrichedFieldProps","onBlur","pickerSlotProps","pickerSlots","slotPropsForLayout","toolbar","Layout","layout","renderPicker","children","role","containerRef","anchorEl"],"sources":["/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/node_modules/@mui/x-date-pickers-pro/internal/hooks/useDesktopRangePicker/useDesktopRangePicker.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"props\"];\nimport * as React from 'react';\nimport { useSlotProps } from '@mui/base/utils';\nimport { useLicenseVerifier } from '@mui/x-license-pro';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { PickersLayout } from '@mui/x-date-pickers/PickersLayout';\nimport { executeInTheNextEventLoopTick, getActiveElement, usePicker, PickersPopper } from '@mui/x-date-pickers/internals';\nimport { useEnrichedRangePickerFieldProps } from '../useEnrichedRangePickerFieldProps';\nimport { getReleaseInfo } from '../../utils/releaseInfo';\nimport { useRangePosition } from '../useRangePosition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\nexport const useDesktopRangePicker = _ref => {\n  var _fieldType, _slots$layout;\n  let {\n      props\n    } = _ref,\n    pickerParams = _objectWithoutPropertiesLoose(_ref, _excluded);\n  useLicenseVerifier('x-date-pickers-pro', releaseInfo);\n  const {\n    slots,\n    slotProps,\n    className,\n    sx,\n    format,\n    formatDensity,\n    label,\n    inputRef,\n    readOnly,\n    disabled,\n    autoFocus,\n    disableOpenPicker,\n    localeText\n  } = props;\n  const fieldContainerRef = React.useRef(null);\n  const popperRef = React.useRef(null);\n  const {\n    rangePosition,\n    onRangePositionChange,\n    singleInputFieldRef\n  } = useRangePosition(props);\n  const {\n    open,\n    actions,\n    layoutProps,\n    renderCurrentView,\n    shouldRestoreFocus,\n    fieldProps: pickerFieldProps\n  } = usePicker(_extends({}, pickerParams, {\n    props,\n    wrapperVariant: 'desktop',\n    autoFocusView: true,\n    additionalViewProps: {\n      rangePosition,\n      onRangePositionChange\n    }\n  }));\n  const handleBlur = () => {\n    executeInTheNextEventLoopTick(() => {\n      var _fieldContainerRef$cu, _popperRef$current;\n      if ((_fieldContainerRef$cu = fieldContainerRef.current) != null && _fieldContainerRef$cu.contains(getActiveElement(document)) || (_popperRef$current = popperRef.current) != null && _popperRef$current.contains(getActiveElement(document))) {\n        return;\n      }\n      actions.onDismiss();\n    });\n  };\n  const Field = slots.field;\n  const fieldType = (_fieldType = Field.fieldType) != null ? _fieldType : 'multi-input';\n  const fieldProps = useSlotProps({\n    elementType: Field,\n    externalSlotProps: slotProps == null ? void 0 : slotProps.field,\n    additionalProps: _extends({}, pickerFieldProps, {\n      readOnly,\n      disabled,\n      className,\n      sx,\n      format,\n      formatDensity,\n      autoFocus: autoFocus && !props.open,\n      ref: fieldContainerRef\n    }, fieldType === 'single-input' && {\n      inputRef\n    }),\n    ownerState: props\n  });\n  const enrichedFieldProps = useEnrichedRangePickerFieldProps({\n    wrapperVariant: 'desktop',\n    fieldType,\n    open,\n    actions,\n    readOnly,\n    disableOpenPicker,\n    label,\n    localeText,\n    onBlur: handleBlur,\n    rangePosition,\n    onRangePositionChange,\n    singleInputFieldRef,\n    pickerSlotProps: slotProps,\n    pickerSlots: slots,\n    fieldProps\n  });\n  const slotPropsForLayout = _extends({}, slotProps, {\n    toolbar: _extends({}, slotProps == null ? void 0 : slotProps.toolbar, {\n      rangePosition,\n      onRangePositionChange\n    })\n  });\n  const Layout = (_slots$layout = slots == null ? void 0 : slots.layout) != null ? _slots$layout : PickersLayout;\n  const renderPicker = () => /*#__PURE__*/_jsxs(LocalizationProvider, {\n    localeText: localeText,\n    children: [/*#__PURE__*/_jsx(Field, _extends({}, enrichedFieldProps)), /*#__PURE__*/_jsx(PickersPopper, _extends({\n      role: \"tooltip\",\n      containerRef: popperRef,\n      anchorEl: fieldContainerRef.current,\n      onBlur: handleBlur\n    }, actions, {\n      open: open,\n      slots: slots,\n      slotProps: slotProps,\n      shouldRestoreFocus: shouldRestoreFocus,\n      children: /*#__PURE__*/_jsx(Layout, _extends({}, layoutProps, slotProps == null ? void 0 : slotProps.layout, {\n        slots: slots,\n        slotProps: slotPropsForLayout,\n        children: renderCurrentView()\n      }))\n    }))]\n  });\n  return {\n    renderPicker\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}