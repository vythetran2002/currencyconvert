{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/Api/testAutoComplete.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = ['Option 1', 'Option 2'];\nfunction ControllableStates() {\n  _s();\n  const [value, setValue] = React.useState(options[0]);\n  const [inputValue, setInputValue] = React.useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: `value: ${value !== null ? `'${value}'` : 'null'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `inputValue: '${inputValue}'`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: value,\n      onChange: (event, newValue) => {\n        setValue(newValue);\n      },\n      inputValue: inputValue,\n      onInputChange: (event, newInputValue) => {\n        setInputValue(newInputValue);\n      },\n      id: \"controllable-states-demo\",\n      options: options,\n      sx: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Controllable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(ControllableStates, \"pS+GIa0f4n/0SDHG8EibyuvGghw=\");\n_c = ControllableStates;\nexport default ControllableStates;\nvar _c;\n$RefreshReg$(_c, \"ControllableStates\");","map":{"version":3,"names":["React","TextField","Autocomplete","jsxDEV","_jsxDEV","options","ControllableStates","_s","value","setValue","useState","inputValue","setInputValue","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","event","newValue","onInputChange","newInputValue","id","sx","width","renderInput","params","label","_c","$RefreshReg$"],"sources":["/Users/Shared/ATS Git/ATSDemo/ReactJs/ReactCaseStudy/my-app/src/Api/testAutoComplete.js"],"sourcesContent":["import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nconst options = ['Option 1', 'Option 2'];\n\nfunction ControllableStates() {\n    const [value, setValue] = React.useState(options[0]);\n    const [inputValue, setInputValue] = React.useState('');\n\n    return (\n        <div>\n            <div>{`value: ${value !== null ? `'${value}'` : 'null'}`}</div>\n            <div>{`inputValue: '${inputValue}'`}</div>\n            <br />\n            <Autocomplete\n                value={value}\n                onChange={(event, newValue) => {\n                    setValue(newValue);\n                }}\n                inputValue={inputValue}\n                onInputChange={(event, newInputValue) => {\n                    setInputValue(newInputValue);\n                }}\n                id=\"controllable-states-demo\"\n                options={options}\n                sx={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Controllable\" />}\n            />\n        </div>\n    );\n}\n\nexport default ControllableStates;\n\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC;AAExC,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAEtD,oBACIN,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAO,UAASL,KAAK,KAAK,IAAI,GAAI,IAAGA,KAAM,GAAE,GAAG,MAAO;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/Db,OAAA;MAAAS,QAAA,EAAO,gBAAeF,UAAW;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1Cb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNb,OAAA,CAACF,YAAY;MACTM,KAAK,EAAEA,KAAM;MACbU,QAAQ,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK;QAC3BX,QAAQ,CAACW,QAAQ,CAAC;MACtB,CAAE;MACFT,UAAU,EAAEA,UAAW;MACvBU,aAAa,EAAEA,CAACF,KAAK,EAAEG,aAAa,KAAK;QACrCV,aAAa,CAACU,aAAa,CAAC;MAChC,CAAE;MACFC,EAAE,EAAC,0BAA0B;MAC7BlB,OAAO,EAAEA,OAAQ;MACjBmB,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAI,CAAE;MACnBC,WAAW,EAAGC,MAAM,iBAAKvB,OAAA,CAACH,SAAS;QAAA,GAAK0B,MAAM;QAAEC,KAAK,EAAC;MAAc;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACV,EAAA,CAzBQD,kBAAkB;AAAAuB,EAAA,GAAlBvB,kBAAkB;AA2B3B,eAAeA,kBAAkB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}